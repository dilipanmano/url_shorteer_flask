from flask import Flask, render_template, request, redirect,url_for,flash, abort, session, jsonify
import json
import os.path
from werkzeug.utils import secure_filename

app = Flask('__name__')
app.secret_key = "AFB94496D3CFFD8700DFA98E32626831E00FF47C49F788BC72D34B30065F61C6"

@app.route('/')

def home():
    return render_template('home.html', cody=session.keys() )

@app.route('/your-url',methods=['GET','POST'] )
def your_url():
    if request.method == 'POST':
        urls={}

        if os.path.exists('url.json'):
            with open('url.json') as urls_file:
                urls= json.load(urls_file)

        if request.form['text'] in urls.keys():
            flash("short name already taken, choose another")
            return redirect(url_for('home'))  

        if 'url-s' in request.form.keys():
            urls[request.form['text']]= {'url':request.form['url-s']}
        else:
            f=request.files['file']
            fullname = request.form['text']+ secure_filename(f.filename)
            f.save('D:/dilipan/training/static/user_files/'+fullname)
            urls[request.form['text']]= {'file': fullname}
        

        with open('url.json','w') as url_file:
            json.dump(urls,url_file)
            session[request.form['text']]=True

        return render_template('your-url.html', var1=request.form['text'])
    else:
        return redirect(url_for('home'))

@app.route('/<string:text>')
def redirect_to_url(text):
    if os.path.exists('url.json'):
        with open('url.json') as urls_file:
            urls = json.load(urls_file)
            if text in urls.keys():
                if 'url' in urls[text].keys() :
                    return redirect(urls[text]['url'])
                else:
                    return redirect(url_for('static',filename='/user_files/'+urls[text]['file']))
    abort(404)

@app.errorhandler(404)
def error_msg(error):
    return render_template('error_page.html'),404

@app.route('/api')
def session_api():
    return jsonify(list(session.keys()))
